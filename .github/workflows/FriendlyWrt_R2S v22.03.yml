name: NanoPi-R2S OpenWrt 22.03 Build

env:
  SSH_ACTIONS: false
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

on:
  push:
    #paths:
    #  - 'CHANGELOG.md'
  #watch:
  #  types: started
  schedule:
    - cron: '00 10 * * 5'


jobs:

  build:
    # runs-on: ubuntu-18.04
    runs-on: ubuntu-20.04
    
    steps:
   
      #- name: Maximize build space
      #  uses: easimon/maximize-build-space@master
      #  with:
      #    root-reserve-mb: 1024
      #    swap-size-mb: 1024
      #    remove-dotnet: 'true'
      #    remove-android: 'true'

      - name: Checkout
        uses: actions/checkout@master
        #with:
        #  ref: master

      - name: Initialize Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          # sudo rm -rf /etc/apt/sources.list.d
          sudo apt-get update
          wget -qO - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | /bin/bash
          sudo -E apt-get install clang llvm quilt
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk /usr/local/share/boost /opt/ghc
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo apt-get autoclean
                    
          # for git error
          git config --global user.email "dongyusen@gmail.com"
          git config --global user.name "dongyusen"
          
          echo "Free space:"
          df -h
      - name: Install Repo
        run: |
          git clone https://github.com/friendlyarm/repo
          sudo cp repo/repo /usr/bin/
      - name: Download Source
        run: |
          rm -rf code
          mkdir code
          cd code
          cp /usr/bin/repo ./repo
          python2 repo init -u https://github.com/friendlyarm/friendlywrt_manifests -b master-v22.03 -m rk3328.xml --repo-url=https://github.com/friendlyarm/repo  --no-clone-bundle
          python2 repo sync -c  --no-clone-bundle
          
      - name: Update Feeds		
        run: |		
          cd code/friendlywrt
          ./scripts/feeds update -a
          rm -rf feeds/packages/net/zerotier
  
      - name: Processing drivers
        run: |
          cd code/friendlywrt/package
          
          #漂亮的主题
          git clone https://github.com/jerrykuku/luci-theme-argon.git custom/luci-theme-argon
          git clone --depth=1 https://github.com/jerrykuku/luci-app-argon-config  custom/luci-app-argon-config

          #越过长城
          svn co https://github.com/vernesong/OpenClash/trunk/luci-app-openclash custom/luci-app-openclash
          
          svn co https://github.com/fw876/helloworld/trunk/luci-app-ssr-plus custom/luci-app-ssr-plus
          #svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/redsocks2 custom/redsocks2
          svn co https://github.com/immortalwrt/packages/branches/openwrt-21.02/net/redsocks2 custom/redsocks2
          
          svn co https://github.com/coolsnowwolf/luci/trunk/applications/luci-app-n2n custom/luci-app-n2n
          # svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/n2n custom/n2n
          svn co https://github.com/coolsnowwolf/packages/trunk/net/n2n custom/n2n
          
          git clone https://github.com/xiaorouji/openwrt-passwall.git custom/openwrt-passwall
          mv custom/openwrt-passwall/v2ray-core custom/
          mv custom/openwrt-passwall/v2ray-plugin custom/
          mv custom/openwrt-passwall/xray-core custom/
          mv custom/openwrt-passwall/xray-plugin custom/
          sed -i 's/GO111MODULE=on/GO111MODULE=off/' custom/xray-core/Makefile
          sed -i 's/GO111MODULE=on/GO111MODULE=off/' custom/xray-plugin/Makefile
          sed -i 's/GO111MODULE=on/GO111MODULE=off/' custom/v2ray-core/Makefile
          sed -i 's/GO111MODULE=on/GO111MODULE=off/' custom/v2ray-plugin/Makefile
          
          #####
          git clone https://github.com/jerrykuku/lua-maxminddb.git custom/lua-maxminddb
          svn co https://github.com/kenzok8/small-packages/trunk/lua-neturl custom/lua-neturl
          git clone https://github.com/jerrykuku/luci-app-vssr.git custom/luci-app-vssr
          # git clone --depth=1 https://github.com/garypang13/luci-app-bypass custom/luci-app-bypass
          # svn co https://github.com/kiddin9/openwrt-bypass/trunk/luci-app-bypass custom/luci-app-bypass
          git clone https://github.com/pymumu/smartdns custom/smartdns-le    
          
          cd ../
          
          sed -i '/enable-jsonc/i\\t--disable-cloud \\' feeds/packages/admin/netdata/Makefile

          cd package/

          #广告过滤
          git clone https://github.com/rufengsuixing/luci-app-adguardhome.git custom/luci-app-adguardhome
          svn co https://github.com/ykxVK8yL5L/packages/trunk/openwrt-packages/luci-app-dnsfilter custom/luci-app-dnsfilter
          
          
          #VPN，虚拟局域网
          ### zerotier
          svn co https://github.com/coolsnowwolf/luci/trunk/applications/luci-app-zerotier custom/luci-app-zerotier
          svn co https://github.com/coolsnowwolf/packages/trunk/net/zerotier custom/zerotier
          
          
          #系统工具
          svn co https://github.com/songchenwen/nanopi-r2s/trunk/luci-app-r2sflasher custom/luci-app-r2sflasher
          svn co https://github.com/coolsnowwolf/luci/trunk/applications/luci-app-netdata custom/luci-app-netdata
          
          # kms服务器
          svn co https://github.com/immortalwrt/packages/branches/openwrt-21.02/net/vlmcsd  custom/vlmcsd
          svn co https://github.com/coolsnowwolf/luci/trunk/applications/luci-app-vlmcsd custom/luci-app-vlmcsd
          
          ## autoreboot 
          svn co https://github.com/coolsnowwolf/luci/trunk/applications/luci-app-autoreboot custom/luci-app-autoreboot
          
          ## luci-app-usb-printer && filetransfer
          svn co https://github.com/coolsnowwolf/luci/trunk/applications/luci-app-usb-printer custom/luci-app-usb-printer
          svn co https://github.com/coolsnowwolf/luci/trunk/applications/luci-app-filetransfer custom/luci-app-filetransfer
          svn co https://github.com/coolsnowwolf/luci/trunk/libs/luci-lib-fs custom/luci-lib-fs
          
          ## 网络驱动
          git clone https://github.com/immortalwrt/immortalwrt.git test
          cp -r test/package/kernel/r8* custom/
          cp -r test/package/kernel/rtl* custom/
          # cp -r test/package/kernel/exfat custom/
          rm -rf test
          rm -rf custom/r8101
          
          rm -rf custom/rtl8812au-ct
          
          #svn co https://github.com/immortalwrt/immortalwrt/branches/master/package/kernel/r8125 custom/r8125
          #svn co https://github.com/immortalwrt/immortalwrt/branches/master/package/kernel/r8152 custom/r8152
          #svn co https://github.com/immortalwrt/immortalwrt/branches/master/package/kernel/r8168 custom/r8168
          #svn co https://github.com/immortalwrt/immortalwrt/branches/master/package/kernel/rtl8188eu custom/rtl8188eu
          #svn co https://github.com/immortalwrt/immortalwrt/branches/master/package/kernel/rtl8189es custom/rtl8189es
          #svn co https://github.com/immortalwrt/immortalwrt/branches/master/package/kernel/rtl8192eu custom/rtl8192eu
          #svn co https://github.com/immortalwrt/immortalwrt/branches/master/package/kernel/rtl8812au-ac custom/rtl8812au-ac 
          #svn co https://github.com/immortalwrt/immortalwrt/branches/master/package/kernel/rtl8812au-ct custom/rtl8812au-ct 
          #svn co https://github.com/immortalwrt/immortalwrt/branches/master/package/kernel/rtl8821cu custom/rtl8821cu
          #svn co https://github.com/immortalwrt/immortalwrt/branches/master/package/kernel/rtl88x2bu custom/rtl88x2bu

          #关闭一些不必要的软件
          #rm -rf custom/luci-app-ssr-plus
          #rm -rf custom/openwrt-passwall/luci-app-passwall
          #rm -rf custom/luci-app-vssr
          #rm -rf custom/luci-app-open
          #rm -rf custom/luci-app-bypass
          
          
          # UPX 可执行软件压缩
          cd ../
          #sed -i '/patchelf pkgconf/i\tools-y += ucl upx' ./tools/Makefile
          #sed -i '\/autoconf\/compile :=/i\$(curdir)/upx/compile := $(curdir)/ucl/compile' ./tools/Makefile
          #svn co https://github.com/immortalwrt/immortalwrt/branches/master/tools/upx tools/upx
          #svn co https://github.com/immortalwrt/immortalwrt/branches/master/tools/ucl tools/ucl
          
      - name: Update Target.mk
        run: |
          cd code/friendlywrt/include
          sed -i 's/dnsmasq /dnsmasq-full default-settings luci /' target.mk
          
          
      - name: Install Feeds		
        run: |		
          cd code/friendlywrt		
          ./scripts/feeds update -a -f
          ./scripts/feeds install -a -f
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          #rm -rf feeds/packages/utils/docker-ce
          #rm -rf feeds/luci/applications/luci-app-docker
          #rm -rf feeds/luci/applications/luci-app-dockerman
          chmod +x ./target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
          chmod +x ./target/linux/rockchip/armv8/base-files/etc/board.d/02_network
          
      - name: Custom Configure Files
        run: |
          rm -f code/friendlywrt/.config*
          cat feeds-1907.conf > code/friendlywrt/.config

      - name: SSH连接
        uses: DONGYUSEN/debugger-action@master
        if: env.SSH_ACTIONS == 'true'
        
      - name: Install Clash Binaries
        run: |
          cd code/friendlywrt/package/base-files/files
          mkdir -p etc/openclash/core
          # for updates, go to: https://github.com/Dreamacro/clash/releases
          # https://api.github.com/repos/vernesong/OpenClash/releases/tags/Clash | grep /clash-linux-$1 | sed 's/.*url\": \"//g' | sed 's/\"//g'       
          #wget -qO- https://github.com/Dreamacro/clash/releases/download/v1.12.0/clash-linux-armv8-v1.12.0.gz | gunzip -c > etc/openclash/core/clash
          wget -qO- https://github.com/vernesong/OpenClash/releases/download/Clash/clash-linux-armv8.tar.gz | gunzip -c > etc/openclash/core/clash
          # for updates, go to: https://github.com/vernesong/OpenClash/releases/tag/TUN-Premium
          # curl -sL https://api.github.com/repos/vernesong/OpenClash/releases/tags/TUN-Premium | grep /clash-linux-$1 | sed 's/.*url\": \"//g' | sed 's/\"//g' 
          wget -qO- https://github.com/vernesong/OpenClash/releases/download/TUN-Premium/clash-linux-armv8-2022.06.19-13-ga45638d.gz | gunzip -c > etc/openclash/core/clash_tun
          # for updates, go to: https://github.com/vernesong/OpenClash/releases/tag/TUN
          # curl -sL https://api.github.com/repos/vernesong/OpenClash/releases/tags/TUN | grep /clash-linux-$1 | sed 's/.*url\": \"//g' | sed 's/\"//g'     
          wget -qO- https://github.com/vernesong/OpenClash/releases/download/TUN/clash-linux-armv8.tar.gz | tar xOvz > etc/openclash/core/clash_game
          chmod +x etc/openclash/core/clash*
        
      - name: Set Default Values
        run: |
          cd code/friendlywrt
          echo -e "\nBuild date:$(date +%Y-%m-%d), by dongyusen@gmail.com\n" >> package/base-files/files/etc/banner
          sed -i 's/timezone='UTC'/timezone='CST-8'/' package/base-files/files/bin/config_generate

          make defconfig
          # make download -j$(($(nproc)+1))
          make download -j12
      
      - name: Install UPX
        run: |
          wget -q -O - https://github.com/upx/upx/releases/download/v3.96/upx-3.96-amd64_linux.tar.xz | tar -Jx --strip 1 -f - -C code/friendlywrt/staging_dir/host/bin/
          

      - name: Build OpenWrt
        run: |
          
          echo "Free space:"
          df -h
          #########
          cd code
          sed -i '/feeds/d' scripts/mk-friendlywrt.sh          
          sed -i 's/set -eu/set -u/' scripts/mk-friendlywrt.sh
          sed -i 's/make -j$(nproc) V=s/make -j1 V=sc/' scripts/mk-friendlywrt.sh
          # sed -i 's/make -j$(nproc) V=s/make -j8 V=s/' scripts/mk-friendlywrt.sh
         
          git clone https://github.com/friendlyarm/prebuilts.git -b master --depth 1
          cd prebuilts/gcc-x64
          sudo tar xvf toolchain-11.3-aarch64.tar.xz -C /
          

      - name: Build OpenWrt2
        run: |
          cd code 
          ./build.sh nanopi_r2s.mk          
        

      #- name: SSH连接
      #  uses: DONGYUSEN/debugger-action@master
      #  if: env.SSH_ACTIONS == 'true'
        

      - name: Fix Rootfs Owner and Group
        run: |
          
          lodev=$(sudo losetup -f)
          echo "found unused loop dev $lodev"
          
          #sudo fdisk -lu code/out/*.img
          #sudo losetup --show -f -P code/out/*.img
          
          #Device                                                   Start     End Sectors   Size Type
          #code/out/FriendlyWrt_20220125_NanoPi-R2S_arm64_sd.img1   16384   24575    8192     4M unknown
          #code/out/FriendlyWrt_20220125_NanoPi-R2S_arm64_sd.img2   24576   32767    8192     4M unknown
          #code/out/FriendlyWrt_20220125_NanoPi-R2S_arm64_sd.img3   32768   40959    8192     4M unknown
          #code/out/FriendlyWrt_20220125_NanoPi-R2S_arm64_sd.img4   40960   49151    8192     4M unknown
          #code/out/FriendlyWrt_20220125_NanoPi-R2S_arm64_sd.img5   49152   81919   32768    16M unknown
          #code/out/FriendlyWrt_20220125_NanoPi-R2S_arm64_sd.img6   81920  163839   81920    40M unknown
          #code/out/FriendlyWrt_20220125_NanoPi-R2S_arm64_sd.img7  163840  262143   98304    48M unknown
          #code/out/FriendlyWrt_20220125_NanoPi-R2S_arm64_sd.img8  262144 1417215 1155072   564M unknown
          #code/out/FriendlyWrt_20220125_NanoPi-R2S_arm64_sd.img9 1417216 1953090  535875 261.7M unknown
          
          sudo losetup -o 134217728 $lodev code/out/*.img
          
          #sudo mkfs -t ext4 $lodev
          sudo rm -rf /mnt/friendlywrt-tmp
          sudo mkdir -p /mnt/friendlywrt-tmp
          sudo mount $lodev /mnt/friendlywrt-tmp
          
          ls -l /mnt/friendlywrt-tmp
          
          sudo chown -R root:root /mnt/friendlywrt-tmp
          
          sudo df -lh
          
          # Copy Some Scripts
          sudo cp ./scripts/cpuinfo.sh /mnt/friendlywrt-tmp/bin/cpuinfo && sudo chmod +x /mnt/friendlywrt-tmp/bin/cpuinfo
          sudo cp ./scripts/ipv6-helper.sh /mnt/friendlywrt-tmp/bin/ipv6-helper.sh && sudo chmod +x /mnt/friendlywrt-tmp/bin/ipv6-helper.sh
          
          # for helloworld subscribe error:
          sudo cp /mnt/friendlywrt-tmp/usr/libexec/wget-ssl /mnt/friendlywrt-tmp/usr/bin/wget-ssl          
          ###
          
          #sudo cp ./scripts/FCN_V3.9_Linux.zip /mnt/friendlywrt-tmp/root
          #sudo cp ./scripts/luci-app-dnsfilter_1.0-8_all.ipk /mnt/friendlywrt-tmp/root
          
          sudo umount /mnt/friendlywrt-tmp
          sudo losetup -d $lodev
          
      - name: Assemble Artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          
          #cd code/out
          #tar -czvf ../../artifact/FriendlyWrt_NanoPi-R2S.img.tar.gz *.img
          
          #cd ../../
          cp code/friendlywrt/.config ./artifact/config.txt
          mv code/out/*.gz ./artifact/
          # cp code/out/FriendlyWrt_NanoPi-R2S.img.tar.gz ./artifact/
          # ls -l code/friendlywrt/bin/targets/rockchip/armv8/*.img*
          mv code/friendlywrt/bin/targets/rockchip/armv8/*.img.gz ./artifact/ 
          md5sum ./artifact/*.gz > ./artifact/md5.txt
          

          # 只保留tar.gz
          # cp code/out/*.zip ./artifact/

          
          
          find ./ -name *.ipk > ./artifact/ipkfiles.txt
          
          ## keep the *.ipk files:
          #mkdir ./artifact/package
          #cp ./code/friendlywrt/bin/packages/aarch64_generic/packages/*.ipk  ./artifact/package
          #cp ./code/friendlywrt/bin/packages/aarch64_generic/luci/*.ipk  ./artifact/package
          #cp ./code/friendlywrt/bin/packages/aarch64_generic/base/*.ipk  ./artifact/package
          #cp ./code/friendlywrt/bin/packages/aarch64_generic/routing/*.ipk  ./artifact/package
          #tar -czvf packages.tar.gz ./artifact/package/*.ipk
          #rm -rf ./artifact/package/
          #mv packages.tar.gz ./artifact/
          #md5sum ./artifact/packages.tar.gz >> ./artifact/md5.txt
          
          echo "strDate=$(TZ=UTC-8 date '+%Y-%m-%d')" >> $GITHUB_ENV

      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: FriendlyWrt_NanoPi-R2S RK3328 v22.03
          path: ./artifact/
 
      - name: set NOW
        run: |
          echo "::set-env name=NOW::$(date +'%Y-%m-%d-%H-%M-%S')"
    
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1.8.6
        with:
          name: "Friendlywrt R2s v22.03"
          #allowUpdates: true
          tag: ${{ env.NOW }}
          #tag_name: ${{env.strDate}} 
          #commit: main
          #replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: ./artifact/*.gz,./artifact/*.txt
          
      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@v0.2.0
        with:
          keep_latest: 15
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}   
          
      - name: Delete Artifacts
        uses: geekyeggo/delete-artifact@v1
        with:
          name: |
            FriendlyWrt_NanoPi-R2S RK3328 v22.03
