name: NanoPi-R2S RK3328 OpenWrt 19.07 Build

on:
  push:
    paths:
      - 'CHANGELOG.md'

jobs:

  build:
    timeout-minutes: 720
    runs-on: ubuntu-18.04

    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Initialize Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk
          sudo docker image prune -a -f
          sudo apt-get -y install unzip upx-ucl subversion
          sudo apt-get -y purge dotnet* ghc* google* llvm* mysql* php* zulu* firefox hhvm
          sudo apt-get -y autoremove --purge          
          wget -O - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | bash

      #- name: Setup Debug Session
      #  uses: P3TERX/debugger-action@master
  
      - name: Install Repo
        run: |
          git clone https://github.com/friendlyarm/repo
          sudo cp repo/repo /usr/bin/

      - name: Download Source
        run: |
          rm -rf code
          mkdir code
          cd code
          repo init -u https://github.com/friendlyarm/friendlywrt_manifests -b master-v19.07.5 -m rk3328.xml --repo-url=https://github.com/friendlyarm/repo --no-clone-bundle
          cp ../rk3328.xml ../code/.repo/manifests/rk3328.xml
          repo sync -c --no-clone-bundle -j8

      - name: Merge LEDE
        run: |
          cd code
          git clone https://github.com/coolsnowwolf/lede
          
          cd friendlywrt
          cp -r ../lede/package/lean package/
          cp -r ../lede/package/libs/pcre package/libs/
          rm -rf ../lede
          
          # sed -i 's/^src-git luci.*/src-git luci https:\/\/github.com\/coolsnowwolf\/luci/' feeds.conf.default
          # sed -i 's/^src-git packages.*/src-git packages https:\/\/github.com\/coolsnowwolf\/packages;openwrt-19.07/' feeds.conf.default
          # echo 'src-git node https://github.com/nxhack/openwrt-node-packages.git' >> feeds.conf.default

      - name: Processing LEDE 
        run: |
          cd code/friendlywrt/package
          
          rm -rf lean/UnblockNeteaseMusic
          rm -rf lean/UnblockNeteaseMusicGo
          rm -rf lean/antileech
          rm -rf lean/amule
          rm -rf lean/luci-app-amule
          rm -rf lean/frp
          rm -rf lean/luci-app-frpc
          rm -rf lean/luci-app-frps
          rm -rf lean/baidupcs-web
          rm -rf lean/luci-app-baidupcs-web
          rm -rf lean/luci-app-openvpn-server
          rm -rf lean/luci-app-unblockmusic
          rm -rf lean/qBittorrent
          rm -rf lean/luci-app-qbittorrent
          rm -rf lean/luci-app-uugamebooster
          rm -rf lean/luci-app-softethervpn
          rm -rf lean/softethervpn5
          rm -rf lean/uugamebooster
          rm -rf lean/luci-app-jd-dailybonus
          rm -rf lean/luci-theme-argon    
          
          # for passwall next!
          rm -rf lean/openwrt-chinadns-ng
          rm -rf lean/luci-app-kodexplorer
          rm -rf lean/luci-app-pppoe-relay
          rm -rf lean/luci-app-pptp-server
          rm -rf lean/luci-app-v2ray-server

          cd lean
          git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git
          git clone https://github.com/rufengsuixing/luci-app-adguardhome.git
          git clone https://github.com/jerrykuku/lua-maxminddb.git
          git clone https://github.com/jerrykuku/luci-app-vssr.git
          git clone https://github.com/xiaorouji/openwrt-passwall.git
          git clone https://github.com/NateLol/luci-app-oled.git
          git clone https://github.com/xiaozhuai/luci-app-filebrowser.git
          
          svn co https://github.com/songchenwen/nanopi-r2s/trunk/luci-app-r2sflasher
          svn co https://github.com/pymumu/smartdns/trunk/package/openwrt smartdns
          svn co https://github.com/pymumu/luci-app-smartdns/branches/lede luci-app-smartdns
          svn co https://github.com/lisaac/luci-app-dockerman/trunk/applications/luci-app-dockerman

      - name: Update Target.mk
        run: |
          cd code/friendlywrt/include
          sed -i 's/dnsmasq /dnsmasq-full default-settings luci /' target.mk
          
          
      - name: Update Feeds		
        run: |		
          cd code/friendlywrt		
          ./scripts/feeds update -a		
          ./scripts/feeds install -a
          
      - name: Install Mods
        run: |
          cd code/friendlywrt
          
          # add libs 
          rm -rf feeds/packages/libs/libcap && svn co https://github.com/openwrt/openwrt/trunk/package/libs/libcap feeds/packages/libs/libcap
          rm -rf feeds/packages/libs/librpc && svn co https://github.com/openwrt/openwrt/branches/lede-17.01/package/libs/librpc feeds/packages/libs/librpc
          rm -rf feeds/packages/libs/libnatpmp && svn co https://github.com/coolsnowwolf/packages/trunk/libs/libnatpmp feeds/packages/libs/libnatpmp
          rm -rf feeds/packages/utils/antfs-mount && svn co https://github.com/openwrt/packages/trunk/utils/antfs-mount feeds/packages/utils/antfs-mount
          
          # fix xtables-addons:
          #rm -rf package/feeds/packages/xtables-addons && svn co https://github.com/coolsnowwolf/packages/trunk/net/xtables-addons package/feeds/packages/xtables-addons
          
          # fix golang
          rm -rf feeds/packages/lang/luasec && svn co https://github.com/coolsnowwolf/packages/trunk/lang/luasec feeds/packages/lang/luasec
          rm -rf feeds/packages/lang/golang/ && svn co https://github.com/coolsnowwolf/packages/trunk/lang/golang feeds/packages/lang/golang
          
          ## netdata
          rm -rf package/feeds/packages/netdata && svn co https://github.com/openwrt/packages/trunk/admin/netdata package/feeds/packages/netdata
          sed -i '/enable-jsonc/i\\t--disable-cloud \\' package/feeds/packages/netdata/Makefile

          # fix docker build with golang 
          rm -rf feeds/packages/utils/containerd && svn export https://github.com/coolsnowwolf/packages/trunk/utils/containerd feeds/packages/utils/containerd
          rm -rf feeds/packages/utils/docker-ce && svn export https://github.com/coolsnowwolf/packages/trunk/utils/docker-ce feeds/packages/utils/docker-ce
          rm -rf feeds/packages/utils/libnetwork && svn export https://github.com/coolsnowwolf/packages/trunk/utils/libnetwork feeds/packages/utils/libnetwork
          rm -rf feeds/packages/utils/runc && svn export https://github.com/coolsnowwolf/packages/trunk/utils/runc feeds/packages/utils/runc
          
          # some setting!
          sed -i '/STAMP_BUILT/d' feeds/packages/utils/runc/Makefile
          sed -i '/STAMP_BUILT/d' feeds/packages/utils/containerd/Makefile
          
          sed -i '/UPX/d' package/lean/openwrt-passwall/trojan-go/Makefile
          
          wget -O package/kernel/kmod-sched-cake/Makefile https://raw.githubusercontent.com/coolsnowwolf/lede/master/package/kernel/kmod-sched-cake-oot/Makefile
          wget -O feeds/packages/libs/libxml2/Makefile https://raw.githubusercontent.com/coolsnowwolf/packages/master/libs/libxml2/Makefile
          sed -i "/redirect_https/d" package/network/services/uhttpd/files/uhttpd.config
          sed -i '/Load Average/i\\t\t<tr><td width="33%"><%:CPU Temperature%></td><td><%=luci.sys.exec("cut -c1-2 /sys/class/thermal/thermal_zone0/temp")%><span>&#8451;</span></td></tr>' feeds/luci/modules/luci-mod-admin-full/luasrc/view/admin_status/index.htm
          sed -i 's/pcdata(boardinfo.system or "?")/"ARMv8"/' feeds/luci/modules/luci-mod-admin-full/luasrc/view/admin_status/index.htm
          sed -i 's/resolv.conf.d\/resolv.conf.auto/resolv.conf.auto/g' package/lean/luci-app-flowoffload/root/etc/init.d/flowoffload
          sed -i '/done/imkfs.ext4 /dev/mmcblk0p2 && mkdir /mnt/mmcblk0p2 && mount /dev/mmcblk0p2 /mnt/mmcblk0p2 && mkdir /mnt/mmcblk0p2/docker\n' package/base-files/files/root/setup.sh
          sed -i "/done/iblock detect | sed \"s/enabled\\\t'0'/enabled\\\t'1'/\" > /etc/config/fstab\n" package/base-files/files/root/setup.sh
          sed -i '/done/i[ -f /etc/init.d/dockerman ] && /etc/init.d/dockerman restart\n' package/base-files/files/root/setup.sh
          sed -i 's/\/opt\/docker/\/mnt\/mmcblk0p2\/docker/g' package/lean/luci-app-dockerman/root/etc/config/dockerman
          sed -i 's/\/root/\/mnt\/mmcblk0p2/g' package/lean/luci-app-r2sflasher/root/usr/bin/rom_flash
          
          
          # some patch disable the depends. 
          cd 
          #sed -i '/+TARGET_bcm27xx:bcm27xx-userland +TARGET_bcm53xx:nvram \/d' code/friendlywrt/package/lean/autocore/Makefile   # dependence error
          #sed -i '/+block-mount +kmod-usb-storage +kmod-usb-storage-extras +!TARGET_ramips:kmod-usb-storage-uas +kmod-fs-vfat +kmod-fs-ext4 +kmod-fs-exfat +antfs-mount +libblkid/d' code/friendlywrt/package/lean/automount/Makefile   # dependence error
          #sed -i '/+wsdd2/d'  code/friendlywrt/package/lean/autosamba/Makefile
          
          
      - name: Patch Kernel
        run: |
          cd code/kernel/
          # git apply ../../patches/001-add-full_cone_nat.patch
          


      - name: Custom Configure Files
        run: |
          rm -f code/friendlywrt/.config*
          cp r2s-rk3328-config code/configs/config_rk3328
          #cp r2s-rk3328-config code/friendlywrt/.config

      - name: Set Default Values
        run: |
          cd code/friendlywrt
          sed -i '/uci commit luci/i\uci set luci.main.mediaurlbase=/luci-static/argon' package/lean/default-settings/files/zzz-default-settings
          echo -e "\nBuild date:$(date +%Y-%m-%d), by dongyusen@gmail.com\n" >> package/base-files/files/etc/banner
           
      - name: Install UPX
        run: |
          wget -q -O - https://github.com/upx/upx/releases/download/v3.96/upx-3.96-amd64_linux.tar.xz | tar -Jx --strip 1 -f - -C code/friendlywrt/staging_dir/host/bin/
          
      - name: Build OpenWrt
        run: |
          cd code
          echo -e '\nCONFIG_TCP_CONG_ADVANCED=y' >> kernel/arch/arm/configs/sunxi_defconfig
          echo -e '\nCONFIG_TCP_CONG_BBR=m' >> kernel/arch/arm/configs/sunxi_defconfig     
          sed -i '/feeds/d' scripts/mk-friendlywrt.sh          
          sed -i 's/set -eu/set -u/' scripts/mk-friendlywrt.sh
          # sed -i 's/make -j$(nproc) V=s/make -j$(nproc) IGNORE_ERRORS=1/' scripts/mk-friendlywrt.sh
          sed -i 's/make -j$(nproc) V=s/make -j$(nproc)/' scripts/mk-friendlywrt.sh
          #sed -i 's/make -j1 V=s/make -j1 IGNORE_ERRORS=1/' scripts/mk-friendlywrt.sh
          echo -e "$(nproc) thread compile"
          ./build.sh nanopi_r2s.mk
          
          
          ######## my code! 
          #cd friendlywrt/
          #make defconfig
          #make download -j4
          #find dl -size -1024c -exec ls -l {} \;
          #find dl -size -1024c -exec rm -f {} \;
          #make -j$(nproc) || make -j1 V=s --ignore-errors
         # make -j1

      - name: Fix Rootfs Owner and Group
        run: |
          sudo df -lh
          lodev=$(sudo losetup -f)
          echo "found unused loop dev $lodev"
          sudo losetup -o 100663296 $lodev code/out/*.img
          #sudo mkfs -t ext4 $lodev
          sudo rm -rf /mnt/friendlywrt-tmp
          sudo mkdir -p /mnt/friendlywrt-tmp
          sudo mount $lodev /mnt/friendlywrt-tmp
          sudo chown -R root:root /mnt/friendlywrt-tmp
          sudo umount /mnt/friendlywrt-tmp
          sudo losetup -d $lodev

      - name: Assemble Artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/

          cp code/out/*.img.zip ./artifact/
          cp code/friendlywrt/.config ./artifact/

      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: FriendlyWrt_NanoPi-R2S RK3328 v19.07
          path: ./artifact/
