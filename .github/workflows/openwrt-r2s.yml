name: purge-r2s test
#

env:
  SSH_ACTIONS:  false
  
on:
  push:
    paths:
      - 'openwrt-r2s.yml'
  watch:
    types: started
  schedule:
    - cron: '00 18 * * *'

jobs:

  build:
    timeout-minutes: 720
    runs-on: ubuntu-18.04
    #runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Initialize Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk
          sudo docker image prune -a -f
          sudo apt-get -y install unzip upx-ucl subversion
          sudo apt-get -y purge dotnet* ghc* google* llvm* mysql* php* zulu* firefox hhvm
          sudo apt-get -y autoremove --purge          
          wget -O - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | bash
          
      - name: Install Repo
        run: |
          git clone https://github.com/friendlyarm/repo
          sudo cp repo/repo /usr/bin/
          
      - name: Download Source
        run: |
          rm -rf code
          mkdir code
          cd code
          repo init -u https://github.com/friendlyarm/friendlywrt_manifests -b master-v19.07.5 -m rk3328.xml --repo-url=https://github.com/friendlyarm/repo --no-clone-bundle
          cp ../rk3328.xml ../code/.repo/manifests/rk3328.xml
          repo sync -c --no-clone-bundle -j8
          
          cp ../download.pl  friendlywrt/scripts/download.pl
          
      - name: Clone Feeds
        run: |
          cd code/friendlywrt/
          echo 'src-git routing https://git.openwrt.org/feed/routing.git;openwrt-19.07' > feeds.conf.default
          echo 'src-git telephony https://git.openwrt.org/feed/telephony.git;openwrt-19.07' >> feeds.conf.default
          echo 'src-git freifunk https://github.com/freifunk/openwrt-packages.git;openwrt-19.07' >> feeds.conf.default
          echo 'src-git packages https://github.com/friendlyarm/friendlywrt_project_packages;friendlywrt-v19.07.5' >> feeds.conf.default
          echo 'src-git luci https://github.com/friendlyarm/friendlywrt_project_luci;friendlywrt-v19.07.5' >> feeds.conf.default
          ./scripts/feeds update -a
          
      - name: Processing drivers
        run: |
          cd code/friendlywrt/package
          
          #漂亮的主题
          git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git

          ## 网络驱动
          svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/r8125 custom/r8125
          # svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/r8152 custom/r8152
          svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/r8168 custom/r8168
          svn co https://github.com/immortalwrt/immortalwrt/trunk/package/kernel/rtl8812au-ac custom/rtl8812au-ac 
          svn co https://github.com/immortalwrt/immortalwrt/trunk/package/kernel/rtl8821cu custom/rtl8821cu
          svn co https://github.com/immortalwrt/immortalwrt/trunk/package/kernel/rtl8188eu custom/rtl8188eu
          svn co https://github.com/immortalwrt/immortalwrt/trunk/package/kernel/rtl8192du custom/rtl8192du
          svn co https://github.com/immortalwrt/immortalwrt/trunk/package/kernel/rtl88x2bu custom/rtl88x2bu
          
          # UPX 可执行软件压缩
          cd ../
          sed -i '/patchelf pkgconf/i\tools-y += ucl upx' ./tools/Makefile
          sed -i '\/autoconf\/compile :=/i\$(curdir)/upx/compile := $(curdir)/ucl/compile' ./tools/Makefile
          svn co https://github.com/immortalwrt/immortalwrt/branches/master/tools/upx tools/upx
          svn co https://github.com/immortalwrt/immortalwrt/branches/master/tools/ucl tools/ucl
          
      - name: Update Target.mk
        run: |
          cd code/friendlywrt/include
          sed -i 's/dnsmasq /dnsmasq-full default-settings luci /' target.mk
         
      - name: Install Feeds	
        run: |		
          cd code/friendlywrt		
          # ./scripts/feeds update -a		
          ./scripts/feeds install -a
      - name: Set Default Values
        run: |
          cd code/friendlywrt
          echo -e "\nBuild date:$(date +%Y-%m-%d), by dongyusen@gmail.com\n" >> package/base-files/files/etc/banner
      - name: Install UPX
        run: |
          # wget -q -O - https://github.com/upx/upx/releases/download/v3.96/upx-3.96-amd64_linux.tar.xz | tar -Jx --strip 1 -f - -C code/friendlywrt/staging_dir/host/bin/
          #cat feeds-1907.conf > code/friendlywrt/.config
          #cd code/friendlywrt
          #make defconfig
      - name: SSH连接
        uses: DONGYUSEN/debugger-action@master
        if: env.SSH_ACTIONS == 'true'   
        
      - name: Build OpenWrt
        run: |
          
          cat feeds-1907.conf > code/friendlywrt/.config
          
          ######################### mannully
          cd code/friendlywrt
          make download -j1 V=sc
          make -j$(($(nproc) + 1)) || make -j1 V=s  
          
          ######################### 
          #cd code/
          #sed -i '/feeds/d' scripts/mk-friendlywrt.sh
          #sed -i 's/set -eu/set -u/' scripts/mk-friendlywrt.sh
          #sed -i 's/make -j$(nproc) V=s/make -j3/' scripts/mk-friendlywrt.sh
          #./build.sh nanopi_r2s.mk
         
      - name: Fix Rootfs Owner and Group
        run: |
          sudo df -lh
          lodev=$(sudo losetup -f)
          echo "found unused loop dev $lodev"
          sudo losetup -o 100663296 $lodev code/out/*.img
          #sudo mkfs -t ext4 $lodev
          sudo rm -rf /mnt/friendlywrt-tmp
          sudo mkdir -p /mnt/friendlywrt-tmp
          sudo mount $lodev /mnt/friendlywrt-tmp
          sudo chown -R root:root /mnt/friendlywrt-tmp
          sudo umount /mnt/friendlywrt-tmp
          sudo losetup -d $lodev
          
      - name: Assemble Artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          cp code/out/*.img.zip ./artifact/
          
          ls -lh code/out/*
          cp code/friendlywrt/.config ./artifact/config.seed.txt
          
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: purge-r2s
          path: ./artifact/
